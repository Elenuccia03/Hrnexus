@model DipendenteViewModel
<link rel="stylesheet" href="~/css/calendariolavoratori.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
    integrity="sha384-k6RqeWeci5ZR/Lv4MR0sA0FfDOMV3P8e1Po1URyYDQqUaip48Ac0M7M6V3U5mvr6" crossorigin="anonymous">

<div class="search-container">
    <form asp-action="CalendarioLavoratori" method="get">
        <input class="search" type="text" id="nome" name="nome" placeholder="Cerca dipendente" />
        <input type="hidden" id="annoCorrente" name="annoCorrente" />
        <input type="hidden" id="meseCorrente" name="meseCorrente" />
        <button type="submit" class="search-btn">Cerca</button>
    </form>
</div>

@if (Model != null)
{
    if (Model.DipendenteTrovato)
    {
        int meseCorrente = Model.MeseProgrammazione;
        int annoCorrente = Model.AnnoProgrammazione;
        string meseTestuale = new DateTime(Model.AnnoProgrammazione, Model.MeseProgrammazione, 1).ToString("MMMM").ToUpper();
        int giorniNelMese = DateTime.DaysInMonth(annoCorrente, meseCorrente);
        int primoGiornoDellaSettimana = (int)new DateTime(annoCorrente, meseCorrente, 1).DayOfWeek;
        primoGiornoDellaSettimana = primoGiornoDellaSettimana == 0 ? 7 : primoGiornoDellaSettimana; // Converti Domenica (0) a 7


        <div class="calendar-container">
            <div class="nav-month">
                <form class="form-month" asp-action="CalendarioLavoratori" method="get">
                    <input type="hidden" name="nome" value="@Model.Nome" />
                    <input type="hidden" name="annoCorrente" value="@Model.AnnoProgrammazione" />
                    <input type="hidden" name="meseCorrente" value="@Model.MeseProgrammazione" />
                    <div class="month-selector">
                        <button type="submit" name="direzione" value="precedente"><i class="fas fa-chevron-left"></i></button>
                        <span id="current-month">@meseTestuale @annoCorrente</span>
                        <button type="submit" name="direzione" value="successivo"><i class="fas fa-chevron-right"></i></button>
                    </div>
                </form>
            </div>
            <div class="calendar">
                <div class="day-of-week">Lunedì</div>
                <div class="day-of-week">Martedì</div>
                <div class="day-of-week">Mercoledì</div>
                <div class="day-of-week">Giovedì</div>
                <div class="day-of-week">Venerdì</div>
                <div class="day-of-week">Sabato</div>
                <div class="day-of-week">Domenica</div>

                @for (int i = 1; i < primoGiornoDellaSettimana; i++)
                {
                    <div class="day empty"></div>
                }

                @for (int i = 1; i <= giorniNelMese; i++)
                {
                    <div class="day">
                        @i
                        @{
                            ProgrammazioneViewModel programmazione = Model.Programmazioni.FirstOrDefault(pm => pm.DataGiorno.Day == i);

                            if (programmazione != null)
                            {
                                string cssClass = "";
                                bool isTimbraturaIrregolare = false;
                                bool isTimbraturaRegolare = true;
                                TimeSpan durataProgrammata = programmazione.InizioTurno - programmazione.FineTurno;

                                if (programmazione.TimbraturaInizio != null && programmazione.TimbraturaUscita != null)
                                {
                                    TimeSpan? durataEffettiva = programmazione.TimbraturaInizio - programmazione.TimbraturaUscita;
                                    TimeSpan? differenza = durataProgrammata - durataEffettiva;
                                    if (differenza.HasValue && differenza.Value.TotalMinutes > 15)
                                    {
                                        isTimbraturaIrregolare = true;
                                    }
                                    else
                                    {
                                        isTimbraturaRegolare = true;
                                    }
                                }
                                bool isFerie = programmazione.GiornoFerie;
                                bool isPermesso = programmazione.GiornoPermesso;
                                bool isMalattia = programmazione.GiornoMalattia;

                                if (isTimbraturaRegolare)
                                {
                                    cssClass = "regolare";
                                }
                                if (isTimbraturaIrregolare
                                )
                                {
                                    cssClass = "irregolare";
                                }
                                if (isFerie)
                                {
                                    cssClass = "ferie";
                                }
                                if (isMalattia)
                                {
                                    cssClass = "malattia";
                                }
                                if (isPermesso)
                                {
                                    cssClass = "permesso";
                                }

                                <div class="@cssClass">
                                    <i class="fa-solid fa-square-check"></i>

                                </div>
                            }
                        }
                    </div>
                }

                @for (int i = (primoGiornoDellaSettimana + giorniNelMese - 1) % 7; i < 7 && i > 0; i++)
                {
                    <div class="day empty"></div>
                }
            </div>
        </div>
    }
    else
    {

        <div class='dipnontrovato'>
            Dipendente non trovato
        </div>

    }
}
else
{
    <div>
        benvenuto nella sezione calendario
    </div>
}

<script>
    const dataCorrente = new Date();
    const annoCorrente = dataCorrente.getFullYear();
    const meseCorrente = dataCorrente.getMonth() + 1; // I mesi vanno da 0 (gennaio) a 11 (dicembre)

    // Impostare i valori degli input nascosti
    document.getElementById('annoCorrente').value = annoCorrente;
    document.getElementById('meseCorrente').value = meseCorrente;
</script>