@model DipendenteViewModel
@using System.Text.Json
<link rel="stylesheet" href="~/css/calendariolavoratori.css">
@if (Model != null)
{
    int meseCorrente = Model.MeseProgrammazione;
    int annoCorrente = Model.AnnoProgrammazione;
    string meseTestuale = new DateTime(Model.AnnoProgrammazione, Model.MeseProgrammazione, 1).ToString("MMMM");
    int giorniNelMese = DateTime.DaysInMonth(annoCorrente, meseCorrente);
    int primoGiornoDellaSettimana = (int)new DateTime(annoCorrente, meseCorrente, 1).DayOfWeek;
    primoGiornoDellaSettimana = primoGiornoDellaSettimana == 0 ? 7 : primoGiornoDellaSettimana;
    <div class="calendar-container">
        <div class="nav-month">
            <form class="form-month" asp-action="CalendarioPersonaleForm" method="get">
                <input type="hidden" name="annoCorrente" value="@Model.AnnoProgrammazione" />
                <input type="hidden" name="meseCorrente" value="@Model.MeseProgrammazione" />
                <div class="month-selector">
                    <button type="submit" name="direzione" value="precedente">Precedente</button>
                    <span class="mese-testuale">@meseTestuale @annoCorrente</span>
                    <button type="submit" name="direzione" value="successivo">Successivo</button>
                </div>
            </form>
        </div>
        <div class="calendar">
            <div class="day-of-week">Lunedì</div>
            <div class="day-of-week">Martedì</div>
            <div class="day-of-week">Mercoledì</div>
            <div class="day-of-week">Giovedì</div>
            <div class="day-of-week">Venerdì</div>
            <div class="day-of-week">Sabato</div>
            <div class="day-of-week">Domenica</div>
            @for (int i = 1; i < primoGiornoDellaSettimana; i++)
            {
                <div class="day empty"></div>
            }
            @for (int i = 1; i <= giorniNelMese; i++)
            {
                    ProgrammazioneViewModel programmazione = Model.Programmazioni.FirstOrDefault(pm => pm.DataGiorno.Day == i);
                    var jsonModel = JsonSerializer.Serialize(programmazione);
                    string inizioTurnoJs = "";
                    string fineTurnoJs = "";
                    string cssClass = "";

                    if (programmazione != null)
                    {
                        inizioTurnoJs = programmazione.InizioTurno.ToString("yyyy-MM-ddTHH:mm:ss");
                        fineTurnoJs = programmazione.FineTurno.ToString("yyyy-MM-ddTHH:mm:ss");

                        // Determina la classe CSS
                        bool isTimbraturaIrregolare = false; // Da rivedere la logica per questa variabile
                        bool isTimbraturaRegolare = true; // Da rivedere la logica per questa variabile
                        TimeSpan durataProgrammata = programmazione.FineTurno - programmazione.InizioTurno;

                        if (programmazione.TimbraturaInizio != null && programmazione.TimbraturaUscita != null)
                        {
                            TimeSpan? durataEffettiva = programmazione.TimbraturaUscita - programmazione.TimbraturaInizio;
                            TimeSpan? differenza = durataProgrammata - durataEffettiva;
                            if (differenza.HasValue && differenza.Value.TotalMinutes > 15)
                            {
                                isTimbraturaIrregolare = true;
                            }
                            else
                            {
                                isTimbraturaRegolare = true;
                            }
                        }

                        bool isFerie = programmazione.GiornoFerie;
                        bool isPermesso = programmazione.GiornoPermesso;
                        bool isMalattia = programmazione.GiornoMalattia;

                        if (isTimbraturaRegolare)
                        {
                            cssClass = "regolare";
                        }
                        if (isTimbraturaIrregolare)
                        {
                            cssClass = "irregolare";
                        }
                        if (isFerie)
                        {
                            cssClass = "ferie";
                        }
                        if (isMalattia)
                        {
                            cssClass = "malattia";
                        }
                        if (isPermesso)
                        {
                            cssClass = "permesso";
                        }
                    }

                    <div class="day @cssClass"
                        onclick='gestisciProgrammazione(@i, @Model.MeseProgrammazione, @Model.AnnoProgrammazione, @Html.Raw(jsonModel.Replace("'", "\'")), @Model.IdDipendente)'>
                        @i
                    </div>
                }
            @for (int i = (primoGiornoDellaSettimana + giorniNelMese - 1) % 7; i < 7 && i > 0; i++)
            {
                <div class="day empty"></div>
            }
        </div>
         <div class="leggenda">
                <label>Regolare</label>
                <div class="quadrato regolare"></div>
                <label>Timbratura irregolare</label>
                <div class="quadrato irregolare"></div>
                <label>Malattia</label>
                <div class="quadrato malattia"></div>
                <label>Permesso</label>
                <div class="quadrato permesso"></div>
                <label>Ferie</label>
                <div class="quadrato ferie"></div>
            </div>
            <div>
                <form asp-action="RichiesteAssenza" method="post">
                    <button type="submit" class="btn-assenze search-btn">Sezione Richieste Assenze</button>
                </form>
            </div>
    </div>
    <div id="programmazioneModal" class="modal">
        <div class="modal-content">
            <span id="spanAvviso">Non esiste nessuna programmazione per questa data</span>
            <form id="programmazioneForm" asp-action="GestisciTimbratura" method="post">
                <h2 id="modalTitle">Gestisci Programmazione</h2>
                <input type="hidden" id="giornoModale" name="giornoModale" />
                <input type="hidden" id="meseModale" name="meseModale" />
                <input type="hidden" id="annoModale" name="annoModale" />
                <input type="hidden" id="idProgrammazione" name="idProgrammazione" />
                <label for="inizioTurno">Inizio Turno:</label>
                <span id="inizioTurnoModale" name="inizioTurnoModale"></span>

                <label for="fineTurno">Fine Turno:</label>
                <span id="fineTurnoModale" name="fineTurnoModale"></span>

                <label for="inizioTurno">Timbratura Inizio:</label>
                <span id="inizioTimbraturaModale" name="inizioTurnoModale"></span>

                <label for="fineTurno">Timbratura Fine:</label>
                <span id="fineTimbraturaModale" name="fineTurnoModale"></span>

                <label for="giornoFerie">Giorno di Ferie:</label>
                <span id="giornoFerieModale" name="giornoFerieModale"></span>

                <label for="giornoPermesso">Giorno di Permesso:</label>
                <span id="giornoPermessoModale" name="giornoPermessoModale"></span>

                <label for="giornoMalattia">Giorno di Malattia:</label>
                <span id="giornoMalattiaModale" name="giornoMalattiaModale"></span>
                <br />
                <button type="submit" id="buttonInizio" name="timbratura" value="ingresso">Timbra Ingresso</button>
                <button type="submit" id="buttonFine" name="timbratura" value="uscita">Timbra Uscita</button>
            </form>
        </div>
    </div>
}
<script>
    const modal = document.getElementById('programmazioneModal');

    function gestisciProgrammazione(giorno, mese, anno, programmazione) {

        document.getElementById('giornoModale').value = giorno;
        document.getElementById('meseModale').value = mese;
        document.getElementById('annoModale').value = anno;

        const modalTitle = document.getElementById('modalTitle');
        const inizioTurno = document.getElementById('inizioTurnoModale');
        const fineTurno = document.getElementById('fineTurnoModale');
        const inizioTimbratura = document.getElementById('inizioTimbraturaModale');
        const fineTimbratura = document.getElementById('fineTimbraturaModale');
        const giornoFerie = document.getElementById('giornoFerieModale');
        const giornoPermesso = document.getElementById('giornoPermessoModale');
        const giornoMalattia = document.getElementById('giornoMalattiaModale');
        const programmazioneForm = document.getElementById('programmazioneForm');
        const spanAvviso = document.getElementById('spanAvviso');
        const buttonInizio = document.getElementById('buttonInizio');
        const buttonFine = document.getElementById('buttonFine');

        if (programmazione) {
            programmazioneForm.style.display = 'block';
            spanAvviso.style.display = 'none';
            if (programmazione.TimbraturaInizio == "0001-01-01T00:00:00")
            {
                buttonInizio.style.display = "block";
                buttonFine.style.display = "none";
            }
            else {
                buttonInizio.style.display = "none";
                buttonFine.style.display = "block";
            }
            if (programmazione.TimbraturaUscita != "0001-01-01T00:00:00")
            {
                buttonFine.style.display = "none";
            }
            inizioTurno.innerText = programmazione.InizioTurno ? getFormattedTimeFromString(programmazione.InizioTurno) : 'Dato non presente';
            fineTurno.innerText = programmazione.FineTurno ? getFormattedTimeFromString(programmazione.FineTurno) : 'Dato non presente';
            console.log(programmazione.TimbraturaInizio);
            inizioTimbratura.innerText = programmazione.TimbraturaInizio == "0001-01-01T00:00:00" ? 'Dato non presente' : getFormattedTimeFromString(programmazione.TimbraturaInizio);
            fineTimbratura.innerText = programmazione.TimbraturaUscita == "0001-01-01T00:00:00" ? 'Dato non presente' : getFormattedTimeFromString(programmazione.TimbraturaUscita);
            giornoFerie.innerText = programmazione.GiornoFerie ? 'Confermata' : 'No';
            giornoPermesso.innerText = programmazione.GiornoPermesso ? 'Confermata' : 'No';
            giornoMalattia.innerText = programmazione.GiornoMalattia ? 'Confermata' : 'No';
            document.getElementById('idProgrammazione').value = programmazione.IdProgrammazione;
        } else {
            programmazioneForm.style.display = 'none';
            spanAvviso.style.display = 'block';
        }
        modal.style.display = 'block';
    }

    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = 'none';
        }
    }

    function getFormattedTimeFromString(date) {
        const timePart = date.substring(11, 19);

        return timePart;
    }
</script>